{"ast":null,"code":"const express = require('express');\nconst dbC = require('./dbConfig');\nconst app = express();\nconst port = 3000;\napp.get('/button-click', async (req, res) => {\n  const game1 = req.query.game1;\n  const game2 = req.query.game2;\n  const game3 = req.query.game3;\n  const game4 = req.query.game4;\n  const game5 = req.query.game5;\n  try {\n    dbC.pool.getConnection(function (err) {\n      if (err) throw err;\n      dbC.pool.query(\"SELECT * FROM Users\", function (err, results, fields) {\n        if (err) throw err;\n        res.json({\n          results: results,\n          game1: game1,\n          game2: game2,\n          game3: game3,\n          game4: game4,\n          game5: game5\n        });\n      });\n    });\n  } catch (error) {\n    console.error(error);\n    res.status(500).send('Internal server error');\n  }\n  res.send('Data received');\n});\napp.listen(port, () => {\n  console.log(`Server listening on port ${port}`);\n});","map":{"version":3,"names":["express","require","dbC","app","port","get","req","res","game1","query","game2","game3","game4","game5","pool","getConnection","err","results","fields","json","error","console","status","send","listen","log"],"sources":["C:/Users/Kaleb/git/Spring2023/CSC289-Group-8/backend/src/App.js"],"sourcesContent":["const express = require('express');\r\nconst dbC = require('./dbConfig');\r\n\r\nconst app = express();\r\nconst port = 3000;\r\n\r\napp.get('/button-click', async (req, res) => {\r\n  const game1 = req.query.game1;\r\n  const game2 = req.query.game2;\r\n  const game3 = req.query.game3;\r\n  const game4 = req.query.game4;\r\n  const game5 = req.query.game5;\r\n\r\n  try {\r\n    dbC.pool.getConnection(function(err){\r\n      if (err) throw err;\r\n      dbC.pool.query(\"SELECT * FROM Users\", function(err, results, fields) {\r\n        if (err) throw err;\r\n        res.json({\r\n          results: results,\r\n          game1: game1,\r\n          game2: game2,\r\n          game3: game3,\r\n          game4: game4,\r\n          game5: game5\r\n        });\r\n      });\r\n    });\r\n  } catch (error) {\r\n    console.error(error);\r\n    res.status(500).send('Internal server error');\r\n  }\r\n\r\n  res.send('Data received');\r\n});\r\n\r\n  \r\napp.listen(port, () => {\r\n    console.log(`Server listening on port ${port}`);\r\n});"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,GAAG,GAAGD,OAAO,CAAC,YAAY,CAAC;AAEjC,MAAME,GAAG,GAAGH,OAAO,EAAE;AACrB,MAAMI,IAAI,GAAG,IAAI;AAEjBD,GAAG,CAACE,GAAG,CAAC,eAAe,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EAC3C,MAAMC,KAAK,GAAGF,GAAG,CAACG,KAAK,CAACD,KAAK;EAC7B,MAAME,KAAK,GAAGJ,GAAG,CAACG,KAAK,CAACC,KAAK;EAC7B,MAAMC,KAAK,GAAGL,GAAG,CAACG,KAAK,CAACE,KAAK;EAC7B,MAAMC,KAAK,GAAGN,GAAG,CAACG,KAAK,CAACG,KAAK;EAC7B,MAAMC,KAAK,GAAGP,GAAG,CAACG,KAAK,CAACI,KAAK;EAE7B,IAAI;IACFX,GAAG,CAACY,IAAI,CAACC,aAAa,CAAC,UAASC,GAAG,EAAC;MAClC,IAAIA,GAAG,EAAE,MAAMA,GAAG;MAClBd,GAAG,CAACY,IAAI,CAACL,KAAK,CAAC,qBAAqB,EAAE,UAASO,GAAG,EAAEC,OAAO,EAAEC,MAAM,EAAE;QACnE,IAAIF,GAAG,EAAE,MAAMA,GAAG;QAClBT,GAAG,CAACY,IAAI,CAAC;UACPF,OAAO,EAAEA,OAAO;UAChBT,KAAK,EAAEA,KAAK;UACZE,KAAK,EAAEA,KAAK;UACZC,KAAK,EAAEA,KAAK;UACZC,KAAK,EAAEA,KAAK;UACZC,KAAK,EAAEA;QACT,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpBb,GAAG,CAACe,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,uBAAuB,CAAC;EAC/C;EAEAhB,GAAG,CAACgB,IAAI,CAAC,eAAe,CAAC;AAC3B,CAAC,CAAC;AAGFpB,GAAG,CAACqB,MAAM,CAACpB,IAAI,EAAE,MAAM;EACnBiB,OAAO,CAACI,GAAG,CAAE,4BAA2BrB,IAAK,EAAC,CAAC;AACnD,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}